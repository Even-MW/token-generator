{"version":3,"file":"figmaTokens.js","sourceRoot":"","sources":["../src/figmaTokens.ts"],"names":[],"mappings":"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","sourcesContent":["import jsonQuery from 'json-query';\nimport {getFileNodes} from \"./figmaFile\";\nimport config from './config'\n\nexport default async function getFigmaDesignTokens(brand:IBrand, fileContent: string, canvasName : string) : Promise<IDesignTokens> {\n    try {\n        let figmaJson = JSON.parse(fileContent);\n        if (!figmaJson.name) {\n            throw new Error('Missing name of Figma file. Probably invalid Figma file.')\n        }\n\n        console.log('Name:', figmaJson.name);\n        console.log('Last modified:', figmaJson.lastModified);\n        console.log('Version:', figmaJson.version);\n\n        //Extend the return to more style types based on Canvas and Frame logic in Figma file.\n        return {\n            styles: await getStyles(brand, figmaJson),\n            spacing: getTokens<ISpacing>(figmaJson, canvasName, config.tokenTypes.spacing, spacingMap),\n            radius: getTokens<IRadius>(figmaJson, canvasName, config.tokenTypes.radius, radiusMap),\n            shadow: getTokens<IShadow>(figmaJson, canvasName, config.tokenTypes.shadows, shadowMap),\n            border: getTokens<IBorder>(figmaJson, canvasName, config.tokenTypes.borders, bordersMap)\n        };\n    } catch (err) {\n        console.log('Error parsing JSON string:', err);\n    }\n\n    return {\n        spacing: [],\n        radius: [],\n        shadow: [],\n        border: [],\n        styles: {textStyles:[], colorStyles:[]}\n    }\n}\n\nfunction getTokens<TYPE>(figmaJson: any, canvasName : string, tokenConfig : ITokenTypeConfig, tokenTypeMap : any) : TYPE[] {\n    console.log(`Fetching tokens from : ${tokenConfig.tokenFrameName}`);\n\n    let tokenName = tokenConfig.tokenFrameName.toLowerCase();\n\n    if( tokenConfig.tokenNamePrefix ) {\n        console.log(`Token prefix is set to: ${tokenConfig.tokenNamePrefix}`)\n        tokenName = tokenConfig.tokenNamePrefix\n    }\n\n    let figmaQueryResult = jsonQuery(`document.children[* type=CANVAS & name = ${canvasName}].children[* type=FRAME & name=${tokenConfig.tokenFrameName}].children[* type=COMPONENT | type=RECTANGLE & name~/^${tokenName}.*/]`, {\n        data: figmaJson,\n        allowRegexp: true\n    }).value;\n\n    let tokens = tokenTypeMap(figmaQueryResult);\n\n    console.log(`Hit length: ${tokens.length}`);\n\n    return tokens;\n}\n\nasync function getStyles(brand:IBrand, figmaJson: any) : Promise<IStyles> {\n\n    let counter = 0;\n    let styleKeysParams = Object.keys(figmaJson.styles).map(function(k) {\n        counter++\n        return k;\n    }).join(',');\n\n    console.log(`Style keys: ${styleKeysParams}`)\n    console.log(`Style keys length: ${counter}`);\n\n    return parseStyleNodes(await getFileNodes(brand, styleKeysParams));\n}\n\nfunction parseStyleNodes(styleNodesString:string) : IStyles {\n    try {\n        let figmaJson:any = JSON.parse(styleNodesString);\n\n        return {\n            textStyles: getStyleNodes<ITextStyle>(figmaJson, textStyleMap),\n            colorStyles: getStyleNodes<IColorStyle>(figmaJson, colorsStyleMap)\n        };\n    } catch (err) {\n        console.log('Error parsing JSON string:', err);\n    }\n\n    return {\n        textStyles: [],\n        colorStyles: []\n    };\n}\n\nfunction getStyleNodes<TYPE>(figmaNodesJson: any,  styleTypeMap : any) : TYPE[] {\n    console.log(`Fetching styles using styleTypeMap: ${styleTypeMap.name}`);\n\n    let styles = styleTypeMap(figmaNodesJson);\n    console.log(`Hit length: ${styles.length}`);\n\n    return styles;\n}\n\nfunction textStyleMap(figmaNodesJson : any) : ITextStyle[] {\n    let styleValues = jsonQuery(`nodes[*].document.[* type=TEXT]`, {\n        data: figmaNodesJson\n    }).value;\n\n    return sortTokens(styleValues.map(function(item:any) : ITextStyle {\n        let fillResult = jsonQuery(`fills[type=SOLID]`, {\n            data: item\n        }).value;\n\n        return {\n            id: item.id,\n            name: item.name,\n            nameJson: removeSpecial(item.name, config.tokenTypes.textStyles.tokenNameSeparator),\n            fontFamily: item.style.fontFamily,\n            fontWeight: item.style.fontWeight,\n            fontSize: item.style.fontSize,\n            letterSpacing: item.style.letterSpacing,\n            lineHeightPx: item.style.lineHeightPx,\n            lineHeightPercent: item.style.lineHeightPercent,\n            lineHeightUnit: item.style.lineHeightUnit,\n            colorHex: RGBAToHexA(`rgba(${Math.round(fillResult?.color.r * 255)},${Math.round(fillResult?.color.g * 255)},${Math.round(fillResult?.color.b * 255)},${fillResult?.color.a}`, fillResult?.color.a == 1 ?? false)\n        }\n    }));\n}\n\n    function colorsStyleMap(figmaNodesJson : any) : IColorStyle[] {\n        let styleValues = jsonQuery(`nodes[*].document.[* type=RECTANGLE]`, {\n            data: figmaNodesJson\n        }).value;\n\n        return sortTokens(styleValues.reduce(function(result:IColorStyle[], item:any) : IColorStyle[] {\n            const topFolderName = item.name.substring(0, item.name.indexOf('/'));\n            if (!config.tokenTypes.colorStyles.includeFigmaTopFolders.includes(topFolderName)) {\n                console.log(`Skip item: ${item.name} because the item is not in configurated topFolderName list in config.ts.`)\n                return result;\n            }\n\n            let fillResult = item.fills[0];\n\n            let colorStyle : IColorStyle = {\n                id: item.id,\n                name: item.name,\n                nameJson: removeSpecial(item.name, config.tokenTypes.colorStyles.tokenNameSeparator),\n            }\n\n            if(fillResult?.type === 'SOLID') {\n                colorStyle.colorHex = RGBAToHexA(`rgba(${Math.round(fillResult?.color.r * 255)},${Math.round(fillResult?.color.g * 255)},${Math.round(fillResult?.color.b * 255)},${fillResult?.color.a}`, fillResult?.color.a == 1 ?? false)\n            } else if (fillResult?.type === 'GRADIENT_LINEAR') {\n                colorStyle.gradient = {\n                    stops: fillResult.gradientStops.map((item: any) : IGradientStop => ({\n                        colorHex: RGBAToHexA(`rgba(${Math.round(item.color.r * 255)},${Math.round(item.color.g * 255)},${Math.round(item.color.b * 255)},${item.color.a}`, item.color.a == 1 ?? false),\n                        position: item.position\n                    })),\n                    angle: 180 //Default - should be calculated in future gradientHandlePositions in Figma file on the fill.\n                }\n            }\n\n            result.push(colorStyle);\n\n            return result;\n        }, []));\n    }\n\n    function spacingMap(figmaTokenValues : any) : ISpacing[] {\n        return sortTokens(figmaTokenValues.map((item: any) : ISpacing => ({\n            id: item.id,\n            name: item.name,\n            nameJson: removeSpecial(item.name, config.tokenTypes.spacing.tokenNameSeparator),\n            spacing: item.absoluteBoundingBox.width\n        })));\n    }\n\n    function radiusMap(figmaTokenValues : any) : IRadius[] {\n        return sortTokens(figmaTokenValues.map((item: any) : IRadius => ({\n            id: item.id,\n            name: item.name,\n            nameJson: removeSpecial(item.name, config.tokenTypes.radius.tokenNameSeparator),\n            radius: item.cornerRadius\n        })));\n    }\n\n    export function shadowMap(figmaTokenValues : any) : IShadow[] {\n        return sortTokens(figmaTokenValues.map(function (item: any) : IShadow {\n            let effectsResult = jsonQuery(`effects[type=DROP_SHADOW & visible = true]`, {\n                data: item\n            }).value;\n\n            return {\n                id: item.id,\n                name: item.name,\n                nameJson: removeSpecial(item.name, config.tokenTypes.shadows.tokenNameSeparator),\n                shadow: {\n                    color: RGBAToHexA(`rgba(${Math.round(effectsResult?.color.r * 255)},${Math.round(effectsResult?.color.g * 255)},${Math.round(effectsResult?.color.b * 255)},${effectsResult?.color.a}`, effectsResult?.color.a == 1 ?? false),\n                    offset: {\n                        x: effectsResult?.offset.x,\n                        y: effectsResult?.offset.y\n                    },\n                    radius: effectsResult?.radius,\n                    spread: effectsResult?.spread ?? 0\n                }\n            };\n        }));\n    }\n\n    export function bordersMap(figmaTokenValues : any) : IBorder[] {\n        let strokesQueryResult = jsonQuery(`strokes[type=SOLID]`, {\n            data: figmaTokenValues\n        }).value;\n\n        return sortTokens(figmaTokenValues.map((item: any) : IBorder => ({\n            id: item.id,\n            name: item.name,\n            nameJson: removeSpecial(item.name, config.tokenTypes.borders.tokenNameSeparator),\n            strokeWeight: item.strokeWeight,\n            color: RGBAToHexA(`rgba(${Math.round(strokesQueryResult?.color.r * 255)},${Math.round(strokesQueryResult?.color.g * 255)},${Math.round(strokesQueryResult?.color.b * 255)},${strokesQueryResult?.color.a}`, strokesQueryResult?.color.a == 1 ?? false)\n        })));\n    }\n\n    function RGBAToHexA(rgba:string, forceRemoveAlpha = false) {\n        return \"#\" + rgba.replace(/^rgba?\\(|\\s+|\\)$/g, '') // Get's rgba / rgb string values\n            .split(',') // splits them at \",\"\n            .filter((string, index) => !forceRemoveAlpha || index !== 3)\n            .map(string => parseFloat(string)) // Converts them to numbers\n            .map((number, index) => index === 3 ? Math.round(number * 255) : number) // Converts alpha to 255 number\n            .map(number => number.toString(16)) // Converts numbers to hex\n            .map(string => string.length === 1 ? \"0\" + string : string) // Adds 0 when length of one number is 1\n            .join(\"\") // Puts the array to togehter to a string\n    }\n\n    function removeSpecial (text:string, separator:string[]) {\n        if(text) {\n            const lower = text.toLowerCase();\n            const upper = text.toUpperCase();\n            let firstLetter = true;\n\n            let result = '';\n            let lastSpecialIndex = -1; //Set default last special position to -1 to avoid rule hit when beginning to parse string.\n            for(let i=0; i<lower.length; ++i) {\n\n                if(( separator.includes(text[i])) || (lower[i].trim() === '')) {\n                    lastSpecialIndex = i\n                } else if (firstLetter) {\n                    result += lower[i]\n                    firstLetter = false;\n                } else if(isNumber(text[i]) || (lower[i] !== upper[i])) {\n                    if (lastSpecialIndex === i-1) {\n                        result += upper[i];\n                    } else {\n                        result += text[i];\n                    }\n                }\n            }\n            return result;\n        }\n        return '';\n    }\n\n    function isNumber (text:string) {\n        if(text) {\n            let reg = new RegExp('[0-9]+$');\n            return reg.test(text);\n        }\n        return false;\n    }\n\n    function sortTokens(tokens:any) {\n        return tokens.sort((a:any,b:any) => (a.nameJson > b.nameJson) ? 1 : ((b.nameJson > a.nameJson) ? -1 : 0));\n    }\n"]}