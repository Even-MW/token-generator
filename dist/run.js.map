{"version":3,"file":"run.js","sourceRoot":"","sources":["../src/run.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AACA,oDAA4B;AAC5B,gBAAM,CAAC,MAAM,EAAE,CAAC;AAChB,sDAA6B;AAC7B,2CAAsD;AACtD,gEAAiD;AACjD,kFAA4D;AAG5D,SAAe,cAAc;;QACzB,gBAAM,CAAC,MAAM,CAAC,GAAG,CAAC,UAAgB,IAAI;;gBAClC,IAAI,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE;oBAC3B,IAAI,OAAO,CAAC,GAAG,CAAC,aAAa,KAAK,IAAI,CAAC,WAAW,EAAE;wBAChD,OAAO,CAAC,GAAG,CAAC,mGAAmG,IAAI,CAAC,WAAW,eAAe,IAAI,CAAC,IAAI,EAAE,CAAC,CAAA;wBAC1J,MAAM,sBAAsB,CAAC,IAAI,CAAC,CAAC;qBACtC;iBACJ;qBAAM;oBACH,MAAM,sBAAsB,CAAC,IAAI,CAAC,CAAC,CAAC,qEAAqE;iBAC5G;YACL,CAAC;SAAA,CAAC,CAAC;IACP,CAAC;CAAA;AAED,SAAe,sBAAsB,CAAC,KAAa;;QAC/C,IAAI,SAAS,GAAG,MAAM,IAAA,wBAAY,EAAC,KAAK,CAAC,CAAC;QAC1C,IAAI,YAAY,GAAG,MAAM,IAAA,qBAAoB,EAAC,KAAK,EAAE,SAAS,EAAE,eAAe,CAAC,CAAC;QACjF,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;QACnD,IAAI,WAAW,GAAG,IAAA,8BAAsB,EAAC,YAAY,CAAC,CAAC;QACvD,MAAM,IAAA,qBAAS,EAAC,WAAW,EAAE,KAAK,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC;IAC9D,CAAC;CAAA;AAED,cAAc,EAAE,CAAC","sourcesContent":["import express, { Express, Request, Response } from 'express';\nimport dotenv from 'dotenv';\ndotenv.config();\nimport config from './config'\nimport { getFigmaFile, writeFile } from \"./figmaFile\";\nimport getFigmaDesignTokens from \"./figmaTokens\";\nimport transformCSSToTailwind from \"./transformCSSTailwind\";\n\n\nasync function generateTokens() {\n    config.brands.map(async function (item) {\n        if (process.env.FIGMA_FILE_ID) {\n            if (process.env.FIGMA_FILE_ID === item.figmaFileId) {\n                console.log(`Environment file id is set - normally a Figma publish event.\\nRender ONLY the specific figmaId: ${item.figmaFileId} for brand: ${item.name}`)\n                await getFigmaTokensForBrand(item);\n            }\n        } else {\n            await getFigmaTokensForBrand(item); //If FIGMA_FILE_ID is not set in enviroment, then process all brands.\n        }\n    });\n}\n\nasync function getFigmaTokensForBrand(brand: IBrand) {\n    let figmaFile = await getFigmaFile(brand);\n    let designTokens = await getFigmaDesignTokens(brand, figmaFile, 'Design Tokens');\n    console.log(JSON.stringify(designTokens, null, 4));\n    let tailwindCSS = transformCSSToTailwind(designTokens);\n    await writeFile(tailwindCSS, brand.name, 'tw-css-extend');\n}\n\ngenerateTokens();\n"]}