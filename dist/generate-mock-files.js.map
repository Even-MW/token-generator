{"version":3,"file":"generate-mock-files.js","sourceRoot":"","sources":["../src/generate-mock-files.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AACA,oDAA4B;AAC5B,gBAAM,CAAC,MAAM,EAAE,CAAC;AAChB,sDAA6B;AAC7B,2CAAwD;AAGxD,SAAe,kBAAkB;;QAC7B,gBAAM,CAAC,MAAM,CAAC,GAAG,CAAC,UAAgB,IAAI;;gBAClC,MAAM,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,qEAAqE;YACvG,CAAC;SAAA,CAAC,CAAC;IACP,CAAC;CAAA;AAED,SAAe,gBAAgB,CAAC,KAAa;;QACzC,IAAI,SAAS,GAAG,MAAM,IAAA,wBAAY,EAAC,KAAK,CAAC,CAAC;QAC1C,MAAM,IAAA,yBAAa,EAAC,SAAS,EAAE,KAAK,CAAC,CAAC;IAC1C,CAAC;CAAA;AAED,kBAAkB,EAAE,CAAC","sourcesContent":["import express, { Express, Request, Response } from 'express';\nimport dotenv from 'dotenv';\ndotenv.config();\nimport config from './config'\nimport {getFigmaFile, writeMockFile} from \"./figmaFile\";\n\n\nasync function generateMockBrands() {\n    config.brands.map(async function (item) {\n        await generateMockFile(item); //If FIGMA_FILE_ID is not set in enviroment, then process all brands.\n    });\n}\n\nasync function generateMockFile(brand: IBrand) {\n    let figmaFile = await getFigmaFile(brand);\n    await writeMockFile(figmaFile, brand);\n}\n\ngenerateMockBrands();\n"]}